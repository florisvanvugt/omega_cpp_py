
--- #instruction memory ( Py and C++ have both Writing and Reading access )

# Flag to indicate when the instruction are ready to be copied in the live_shared_memory
instruction_no : d
prefix : d

# Control over viscous force field
viscosity : d

# Variables for controlling servo movement
move_done : q

# desired end location  and duration of the movement
target_x : d
target_y : d
target_z : d
movement_duration : d

# Desired trajectory
new_trajectory : q
trajectory_size : d
trajectory_x : 5000d
trajectory_y : 5000d
trajectory_z : 5000d

# starting location of the movement
start_x : d
start_y : d
start_z : d

# arc-shaped force channel specification
arc_x_plane : d # the x-plane to which we restrict the arc
arc_base_y : d
arc_base_z : d
arc_radius : d

# the number of loop iterations spent generating the current servo movement
move_iterator : q

# stiffness and damping of the PD controller
stiffness : d
damping : d

# Time for the forces to decrease (ms)
active_to_null : d

# Functionality for recording the trajectories.
record_flag : q   # whether we are currently recording
record_iterator : q  # pointer to where in the buffer we are currently writing the recorded samples

# The controller currently active (0=null field)
controller : q

# Protection
movement_cancelled : d

# Put this to 1 to have the robot quit itself.
quit : q


...
---  #live memory ( Py and C++ are able to read this part but only C++ is able to write )

# Whether the robot is currently active
active : q

# Current robot position (x,y,z)
x : d
y : d
z : d

# Forces currently written by the controller. Don't change these within Python, because whatever they are the controller will overwrite them.
fx : d
fy : d
fz : d
vel_x : d
vel_y : d
vel_z : d

# Functionality for recording the trajectories.
record_x : 5000d
record_y : 5000d
record_z : 5000d
record_ft : 80000d

# desired current position (changes over time)
desired_x : d
desired_y : d
desired_z : d

# desired current velocity
desired_vel_x : d
desired_vel_y : d
desired_vel_z : d

# for arc tracing
arc_dist : d


# Stats about the performance, loop time, etc.
loop_time : d
iteration_time : d
dropped_iterations : q # number of dropped loops (because of insufficient time)
main_loop_time : d
t : d
loop_iteration_time : q
loop_iterator : q
clock : d

#Protection
distance_max : d
distance_max_hold : d
distance_max_move_to : d
distance_max_play : d
x_lim : d
y_lim : d
z_lim : d
gap_iterator : d


# Whether to write to the log
write_log : q
...
