#ifndef BASICROBOT_H
#define BASICROBOT_H

#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>
#include <fcntl.h>
#include <sys/mman.h>
#include <comedilib.h>


#include "include/dhdc.h"

#include "struct_shm.h"   // header generated by create_c_header.py

#define SHM_INSTR_FILEPATH "/tmp/sharedinstrmemory.bin" // the file path where shared memory is located (can be anything but needs to be the same as in sharedmem.py)
#define SHM_LIVE_FILEPATH "/tmp/sharedlivememory.bin" // the same idea but we removed instruction from live informations (position, velocity...)

#define DEBUG_FILENAME "robot_debug.txt" // the filename for a debug log


// Pertaining to FT sensor reading through COMEDI
#define COMEDI_DEV "/dev/comedi0"
#define COMEDI_SUBDEVICE 0
#define COMEDI_RANGE 0 // this defines the voltage range that we read, zero is the largest range (-10 to +10V we believe)
#define COMEDI_AREF AREF_GROUND
#define COMEDI_NCHANNELS 16 // how many channels to record from



using namespace std;

class BasicRobot
{
 public:
  //Functions
  BasicRobot();
  virtual ~BasicRobot();
  void create_file_of_size(const char *fp, int fs, int *fd);
  void open_sharedmem();
  void flush_sharedmem();
  void close_sharedmem();
  void openDevice();
  void readSensors();
  void recordPosition();
  void closeDevice();
  bool keep_going();
  shm_instr_t *getShmi();
  shm_live_t *getShml();
  void openDebug();
  void printDebug(const char* data,...);
  void closeDebug();

  // Functions pertaining to reading the FT sensors through Comedi
  void openComedi();
  void readComedi();
  void closeComedi();
  
 protected:
  shm_instr_t *sh_instr_memory;
  shm_live_t *sh_live_memory;
  comedi_t *comedidev;
 private:
  FILE* debugfp;

  //ofstream debugfp;

};

#endif // BASICROBOT_H
